# If serviceMonitor.multipleTarget is enabled, this configuration is actually not used
redisAddress: redis://redis-service:6379

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: true
  multipleTarget: false
  targets: []
  # for every targets, url and name must be set,
  # an individual additionalRelabeling can be set for every target
  # - url: "redis://myredis:6379"
  #   name: "my-redis"
  # - url: "redis://my-redis-cluster:6379"
  #   name: "bar"
  #   additionalRelabeling:
  #   - sourceLabels: [type]
  #     targetLabel: type
  #     replacement: cluster
  #   additionalMetricsRelabels:
  #     type: cluster
  additionalMetricsRelabels: {}
  additionalRelabeling: []

  # Set the namespace the ServiceMonitor should be deployed
  # namespace: monitoring
  # Set how frequently Prometheus should scrape
  # interval: 30s
  # Set path to redis-exporter telemtery-path
  # Please set telemetryPath to /scrape if you are using multiple targets
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  labels:
    release: prometheus
  # Set timeout for scrape
  # timeout: 10s
  # Set relabel_configs as per https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  # relabelings: []
  # Set of labels to transfer on the Kubernetes Service onto the target.
  # targetLabels: []
  # metricRelabelings: []
  # Set tls options
  # scheme: ""
  # tlsConfig: {}